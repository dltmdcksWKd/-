# def solution(s,d,e):
#     a = 0
#     b = 0
#     for i in range(len(s)):
#         if s[i] == '1':
#             a += 1
#         else:
#             b += 1
#     print(a, b)
#     return recursions(a,b,d,e)
# def recursions(a,b,d,e):
#     d += 1
#     e += b
#     print(d)
#     if a == 1:
#         return d,e
#     else:
#         s = bin(a)[2:]
#         return solution(s,d,e)
# print(solution("110010101001"))

# def F(s, c, d):
#     d += s.count('0')
#     if s == '1':
#         return [c,d]
#     else:
#         l = bin(s.count('1'))[2:]
#         c += 1
#         return F(l, c, d)
# def solution(s):
#     return F(s, 0, 0)
# print(solution("110010101001"))

# def solution(n):
#     a = []
#     b = 0
#     answer = 0
#     while n != 0:
#         d = n % 3
#         n = n //3
#         a.append(d)
#         b += 1
#     a.reverse()
#     for i in range(b):
#         answer += (3 ** i) * a[i]
#     return answer
# print(solution(45))

# replace(old,new) 대체
# count() 특정 문자 개수
# find() 특정 문자 위치 찾음 없으면 -1
# index() 특정 문자 위치 찾은 없으면 에러
# split() 문자를 기준으로 나누고 리스트로 바꿈 문자를 안 넣으면 모든 공백 기준으로 나눔
# upper(),lower() 대문자/소문자로 바꿔줌
# isalpha(), isdigit(), isalnum() 문자/숫자/문자 혹은 숫자일 경우 True 아니면 False
# 특수 문자 != 문자
# join(문자열) 리스트를 .앞에 쓰는 문자열을 넣어주면 문자로 바꿈

def solution(n, arr1, arr2):
    answer = []
    for i in range(n):
        a = bin(arr1[i])[2:]
        b = bin(arr2[i])[2:]
        if len(a) == 5:
            arr1[i] = a
        else:
            arr1[i] = ('0'*(n - len(a))) + a
        if len(b) == 5:
            arr2[i] = b
        else:
            arr2[i] = ('0'*(n - len(b))) + b
    for j in range(n):
        c = int(arr1[j]) + int(arr2[j])
        print(c)
    print(arr1,arr2)
    return answer
print(solution(5, [9, 20, 28, 18, 11], [30, 1, 21, 17, 28]))
